{"version":3,"file":"People-legacy-HEwV_S9v.js","sources":["../../src/api/providers/people.js","../../src/pages/People.tsx"],"sourcesContent":["import api, { getImageUrl } from \"..\";\nimport { convertItemsToTiles } from \"../formatters/ItemFormatter\";\n\nexport function minutesToHMM(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  return (\n    hours + \"h \" + (remainingMinutes < 10 ? \"0\" : \"\") + remainingMinutes + \"m\"\n  );\n}\n\nfunction justYear(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[0];\n}\n\nexport function getCredits({ id }) {\n  return api\n    .get(`/person/${id}/combined_credits`)\n    .then(({ cast }) => convertItemsToTiles(cast.slice(0, 7)));\n}\n\nexport function getInfo({ id }) {\n  return api.get(`/person/${id}`).then((data) => ({\n    backgroundImage: getImageUrl(data.profile_path, \"original\"),\n    heroContent: {\n      title: data.title || data.name,\n      description: data.biography,\n    },\n    ...data,\n  }));\n}\n","import { ElementNode, Text, View, Show, hexColor } from \"@lightningtv/solid\";\nimport { Column } from \"@lightningjs/solid-ui\";\nimport { useParams } from \"@solidjs/router\";\nimport { createResource, onMount } from \"solid-js\";\nimport { TileRow } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport { useNavigate } from \"@solidjs/router\";\nimport theme from \"theme\";\nimport styles from \"../styles\";\nimport * as provider from \"../api/providers/people\";\nimport { assertTruthy } from \"@lightningjs/renderer/utils\";\n\nconst People = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [data] = createResource(() => ({ ...params }), provider.getInfo);\n  const [credits] = createResource(() => ({ ...params }), provider.getCredits);\n\n  const Backdrop = {\n    color: hexColor(\"#000000\"),\n    alpha: 0.8,\n    width: 800,\n    height: 440,\n    x: 130,\n    y: 180,\n    borderRadius: 30,\n  };\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children.selected;\n    assertTruthy(entity && entity.href);\n    navigate(entity.href);\n  }\n\n  onMount(() => {\n    setGlobalBackground(\"#333333\");\n  });\n\n  return (\n    <Show when={data()} keyed>\n      <View\n        src={data().backgroundImage}\n        width={400}\n        autosize\n        y={0}\n        x={1800}\n        mountX={1}\n      />\n      <View\n        x={150}\n        y={200}\n        width={800}\n        gap={24}\n        style={styles.Column}\n        zIndex={3}\n      >\n        <Text\n          contain=\"width\"\n          fontFamily={\"Ubuntu\"}\n          style={theme.typography.display2}\n        >\n          {data().name}\n        </Text>\n        <Text contain=\"both\" style={styles.peopleBio}>\n          {data().biography}\n        </Text>\n      </View>\n      <View style={Backdrop} />\n      <Column y={670} x={140} style={styles.Column} scroll=\"none\">\n        <Show when={credits()}>\n          <Text skipFocus style={styles.RowTitle}>\n            Credits\n          </Text>\n          <TileRow autofocus onEnter={onEnter} items={credits()} />\n        </Show>\n      </Column>\n    </Show>\n  );\n};\n\nexport default People;\n"],"names":["getCredits","id","api","get","then","cast","convertItemsToTiles","slice","getInfo","data","_objectSpread","backgroundImage","getImageUrl","profile_path","heroContent","title","name","description","biography","People","params","useParams","navigate","useNavigate","_slicedToArray","createResource","provider","credits","Backdrop","color","hexColor","alpha","width","height","x","y","borderRadius","onEnter","entity","this","children","selected","href","onMount","setGlobalBackground","_$createComponent","Show","when","keyed","View","src","autosize","mountX","gap","style","styles","Column","zIndex","Text","contain","fontFamily","theme","typography","display2","peopleBio","scroll","skipFocus","RowTitle","TileRow","autofocus","items"],"mappings":"0zEAgBO,SAASA,GAAWC,GAAEA,IAC3B,OAAOC,EACJC,IAAI,WAAWF,sBACfG,MAAK,EAAGC,UAAWC,EAAoBD,EAAKE,MAAM,EAAG,KAC1D,CAEO,SAASC,GAAQP,GAAEA,IACxB,OAAOC,EAAIC,IAAI,WAAWF,KAAMG,MAAMK,GAAIC,EACxCC,CAAAA,gBAAiBC,EAAYH,EAAKI,aAAc,YAChDC,YAAa,CACXC,MAAON,EAAKM,OAASN,EAAKO,KAC1BC,YAAaR,EAAKS,YAEjBT,IAEP,cCnBeU,KACb,IAAMC,EAASC,IACTC,EAAWC,IAEVd,EAA8De,EAAtDC,GAAe,IAAAf,EAAA,CAAA,EAAYU,IAAWM,GAA9CjB,GAAI,GACJkB,EAAoEH,EAAzDC,GAAe,IAAAf,KAAYU,IAAWM,GAAmB,MAErEE,EAAW,CACfC,MAAOC,EAAS,WAChBC,MAAO,GACPC,MAAO,IACPC,OAAQ,IACRC,EAAG,IACHC,EAAG,IACHC,aAAc,IAGhB,SAASC,IACHC,IAAAA,EAASC,KAAKC,SAASC,SACdH,EAAAA,GAAUA,EAAOI,MAC9BpB,EAASgB,EAAOI,KAClB,CAMA,OAJAC,GAAQ,KACNC,EAAoB,UAAS,IAG/BC,EACGC,EAAI,CAAA,QAACC,GAAI,OAAEtC,GAAM,EAAEuC,OAAK,EAAA,YAAAR,GAAAK,MAAAA,CAAAA,EACtBI,EAAI,CAAA,OACHC,GAAG,OAAEzC,IAAOE,eAAe,EAC3BqB,MAAO,IACPmB,UAAQ,EACRhB,EAAG,EACHD,EAAG,KACHkB,OAAQ,IAACP,EAEVI,EAAI,CACHf,EAAG,IACHC,EAAG,IACHH,MAAO,IACPqB,IAAK,GAAE,SACPC,GAAK,OAAEC,EAAOC,MAAM,EACpBC,OAAQ,EAAC,YAAAjB,GAAAK,MAAAA,CAAAA,EAERa,EAAI,CACHC,QAAO,QACPC,WAAY,SAAQ,SACpBN,GAAK,OAAEO,EAAMC,WAAWC,QAAQ,EAAA,YAAAvB,GAAA,OAE/B/B,IAAOO,IAAI,IAAA6B,EAEba,EAAI,CAACC,QAAO,OAAA,SAAQL,GAAK,OAAEC,EAAOS,SAAS,EAAA,YAAAxB,GAAA,OACzC/B,IAAOS,SAAS,IAAA,IAAA2B,EAGpBI,EAAI,CAACK,MAAO1B,IAAQiB,EACpBW,EAAM,CAACrB,EAAG,IAAKD,EAAG,IAAG,SAAEoB,GAAK,OAAEC,EAAOC,MAAM,EAAES,OAAM,OAAA,YAAAzB,GAAA,OAAAK,EACjDC,EAAI,CAAA,QAACC,GAAI,OAAEpB,GAAS,EAAA,YAAAa,GAAAK,MAAAA,CAAAA,EAClBa,EAAI,CAACQ,WAAS,EAAA,SAACZ,GAAK,OAAEC,EAAOY,QAAQ,EAAA3B,SAAA,YAAAK,EAGrCuB,EAAO,CAACC,WAAS,EAAChC,UAAgB,SAAEiC,GAAK,OAAE3C,GAAS,IAAA,GAAA,IAAA,GAAA"}