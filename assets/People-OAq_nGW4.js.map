{"version":3,"file":"People-OAq_nGW4.js","sources":["../../src/api/providers/people.js","../../src/pages/People.tsx"],"sourcesContent":["import api, { getImageUrl } from \"..\";\nimport { convertItemsToTiles } from \"../formatters/ItemFormatter\";\n\nexport function minutesToHMM(minutes) {\n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  return (\n    hours + \"h \" + (remainingMinutes < 10 ? \"0\" : \"\") + remainingMinutes + \"m\"\n  );\n}\n\nfunction justYear(dateString) {\n  const parts = dateString.split(\"-\");\n  return parts[0];\n}\n\nexport function getCredits({ id }) {\n  return api\n    .get(`/person/${id}/combined_credits`)\n    .then(({ cast }) => convertItemsToTiles(cast.slice(0, 7)));\n}\n\nexport function getInfo({ id }) {\n  return api.get(`/person/${id}`).then((data) => ({\n    backgroundImage: getImageUrl(data.profile_path, \"original\"),\n    heroContent: {\n      title: data.title || data.name,\n      description: data.biography,\n    },\n    ...data,\n  }));\n}\n","import { ElementNode, Text, View, Show, hexColor } from \"@lightningtv/solid\";\nimport { Column } from \"@lightningjs/solid-ui\";\nimport { useParams } from \"@solidjs/router\";\nimport { createResource, onMount } from \"solid-js\";\nimport { TileRow } from \"../components\";\nimport { setGlobalBackground } from \"../state\";\nimport { useNavigate } from \"@solidjs/router\";\nimport theme from \"theme\";\nimport styles from \"../styles\";\nimport * as provider from \"../api/providers/people\";\nimport { assertTruthy } from \"@lightningjs/renderer/utils\";\n\nconst People = () => {\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const [data] = createResource(() => ({ ...params }), provider.getInfo);\n  const [credits] = createResource(() => ({ ...params }), provider.getCredits);\n\n  const Backdrop = {\n    color: hexColor(\"#000000\"),\n    alpha: 0.8,\n    width: 800,\n    height: 440,\n    x: 130,\n    y: 180,\n    borderRadius: 30,\n  };\n\n  function onEnter(this: ElementNode) {\n    let entity = this.children.selected;\n    assertTruthy(entity && entity.href);\n    navigate(entity.href);\n  }\n\n  onMount(() => {\n    setGlobalBackground(\"#333333\");\n  });\n\n  return (\n    <Show when={data()} keyed>\n      <View\n        src={data().backgroundImage}\n        width={400}\n        autosize\n        y={0}\n        x={1800}\n        mountX={1}\n      />\n      <View\n        x={150}\n        y={200}\n        width={800}\n        gap={24}\n        style={styles.Column}\n        zIndex={3}\n      >\n        <Text\n          contain=\"width\"\n          fontFamily={\"Ubuntu\"}\n          style={theme.typography.display2}\n        >\n          {data().name}\n        </Text>\n        <Text contain=\"both\" style={styles.peopleBio}>\n          {data().biography}\n        </Text>\n      </View>\n      <View style={Backdrop} />\n      <Column y={670} x={140} style={styles.Column} scroll=\"none\">\n        <Show when={credits()}>\n          <Text skipFocus style={styles.RowTitle}>\n            Credits\n          </Text>\n          <TileRow autofocus onEnter={onEnter} items={credits()} />\n        </Show>\n      </Column>\n    </Show>\n  );\n};\n\nexport default People;\n"],"names":["getCredits","id","api","cast","convertItemsToTiles","getInfo","data","getImageUrl","People","params","useParams","navigate","useNavigate","createResource","provider","credits","Backdrop","color","hexColor","alpha","width","height","x","y","borderRadius","onEnter","entity","children","selected","href","onMount","setGlobalBackground","_$createComponent","Show","when","keyed","View","src","backgroundImage","autosize","mountX","gap","style","styles","Column","zIndex","Text","contain","fontFamily","theme","typography","display2","name","peopleBio","biography","scroll","skipFocus","RowTitle","TileRow","autofocus","items"],"mappings":"wMAgBO,SAASA,EAAW,CAAE,GAAAC,GAAM,CACjC,OAAOC,EACJ,IAAI,WAAW,OAAAD,EAAE,oBAAmB,EACpC,KAAK,CAAC,CAAE,KAAAE,CAAI,IAAOC,EAAoBD,EAAK,MAAM,EAAG,CAAC,CAAC,CAAC,CAC7D,CAEO,SAASE,EAAQ,CAAE,GAAAJ,GAAM,CAC9B,OAAOC,EAAI,IAAI,WAAW,OAAAD,EAAI,EAAE,KAAMK,IAAU,CAC9C,gBAAiBC,EAAYD,EAAK,aAAc,UAAU,EAC1D,YAAa,CACX,MAAOA,EAAK,OAASA,EAAK,KAC1B,YAAaA,EAAK,SACnB,EACD,GAAGA,CACJ,EAAC,CACJ,CCnBA,MAAME,EAASA,IAAM,CACnB,MAAMC,EAASC,IACTC,EAAWC,IAEX,CAACN,CAAI,EAAIO,EAAe,KAAO,CAAE,GAAGJ,CAAAA,GAAWK,CAAgB,EAC/D,CAACC,CAAO,EAAIF,EAAe,KAAO,CAAE,GAAGJ,CAAAA,GAAWK,CAAmB,EAErEE,EAAW,CACfC,MAAOC,EAAS,SAAS,EACzBC,MAAO,GACPC,MAAO,IACPC,OAAQ,IACRC,EAAG,IACHC,EAAG,IACHC,aAAc,EAAA,EAGhB,SAASC,GAA2B,CAC9BC,IAAAA,EAAS,KAAKC,SAASC,SACdF,EAAAA,GAAUA,EAAOG,IAAI,EAClClB,EAASe,EAAOG,IAAI,CACtB,CAEAC,OAAAA,EAAQ,IAAM,CACZC,EAAoB,SAAS,CAAA,CAC9B,EAEDC,EACGC,EAAI,CAAA,IAACC,MAAI,CAAA,OAAE5B,EAAK,CAAC,EAAE6B,MAAK,GAAA,IAAAR,UAAA,CAAAK,MAAAA,CAAAA,EACtBI,EAAI,CAAA,IACHC,KAAG,CAAA,OAAE/B,EAAOgC,EAAAA,eAAe,EAC3BlB,MAAO,IACPmB,SAAQ,GACRhB,EAAG,EACHD,EAAG,KACHkB,OAAQ,CAAA,CAACR,EAAAA,EAEVI,EAAI,CACHd,EAAG,IACHC,EAAG,IACHH,MAAO,IACPqB,IAAK,GAAE,IACPC,OAAK,CAAA,OAAEC,EAAOC,MAAM,EACpBC,OAAQ,EAAC,IAAAlB,UAAA,CAAAK,MAAAA,CAAAA,EAERc,EAAI,CACHC,QAAO,QACPC,WAAY,SAAQ,IACpBN,OAAK,CAAA,OAAEO,EAAMC,WAAWC,QAAQ,EAAA,IAAAxB,UAAA,CAAA,OAE/BrB,EAAO8C,EAAAA,IAAI,CAAA,CAAApB,EAAAA,EAEbc,EAAI,CAACC,QAAO,OAAA,IAAQL,OAAK,CAAA,OAAEC,EAAOU,SAAS,EAAA,IAAA1B,UAAA,CAAA,OACzCrB,EAAOgD,EAAAA,SAAS,CAAA,CAAA,CAAA,CAAA,CAAA,CAAAtB,EAAAA,EAGpBI,EAAI,CAACM,MAAO1B,CAAAA,CAAQgB,EAAAA,EACpBY,EAAM,CAACrB,EAAG,IAAKD,EAAG,IAAG,IAAEoB,OAAK,CAAA,OAAEC,EAAOC,MAAM,EAAEW,OAAM,OAAA,IAAA5B,UAAA,CAAA,OAAAK,EACjDC,EAAI,CAAA,IAACC,MAAI,CAAA,OAAEnB,EAAQ,CAAC,EAAA,IAAAY,UAAA,CAAAK,MAAAA,CAAAA,EAClBc,EAAI,CAACU,UAAS,GAAA,IAACd,OAAK,CAAA,OAAEC,EAAOc,QAAQ,EAAA9B,SAAA,SAAA,CAAAK,EAAAA,EAGrC0B,EAAO,CAACC,UAAS,GAAClC,QAAAA,EAAgB,IAAEmC,OAAK,CAAA,OAAE7C,EAAQ,CAAC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAK/D"}