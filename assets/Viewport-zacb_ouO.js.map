{"version":3,"file":"Viewport-zacb_ouO.js","sources":["../../src/pages/Viewport.tsx"],"sourcesContent":["import { Text, View, hexColor } from \"@lightningtv/solid\";\nimport { onMount, onCleanup, createSignal } from \"solid-js\";\nimport { setGlobalBackground } from \"../state\";\n\nexport default () => {\n  let ball, invervalTimer;\n\n  const [ballStatus, setBallStatus] = createSignal([]);\n\n  const styleBall = {\n    width: 100,\n    height: 100,\n    x: -400,\n    y: -400,\n    rotation: 0,\n    borderRadius: 50,\n    color: hexColor(\"#4287f5\"),\n    transition: {\n      x: { duration: 1250, easing: \"linear\" },\n      y: { duration: 1250, easing: \"linear\" },\n      rotation: { duration: 1400, easing: \"ease-in-out\" },\n    },\n  } as const;\n\n  const Title = {\n    fontSize: 32,\n    x: 960,\n    y: 540,\n    mount: 0.5,\n    lineheight: 52,\n  };\n\n  const randomIntBetween = (from, to) =>\n    Math.floor(Math.random() * (to - from + 1) + from);\n\n  onMount(() => {\n    setGlobalBackground(\"#000000\");\n\n    ball.x = (1920 - 100) / 2;\n    ball.y = (1080 - 100) / 2;\n    invervalTimer = setInterval(() => {\n      ball.rotation = randomIntBetween(-90, 90);\n      ball.x = randomIntBetween(-300, 2220);\n      ball.y = randomIntBetween(-300, 1380);\n    }, 2500);\n  });\n\n  function logEvent(name, elm) {\n    setBallStatus((prev) => {\n      return [...prev, name].slice(-4);\n    });\n    console.log(name);\n  }\n\n  onCleanup(() => {\n    clearInterval(invervalTimer);\n  });\n\n  return (\n    <View>\n      <Text style={Title}>{ballStatus().join(\"\\n\")}</Text>\n      <View\n        autofocus\n        style={styleBall}\n        ref={ball}\n        onEvents={[\n          [\"inBounds\", (elm) => logEvent(\"inBounds\", elm)],\n          [\"outOfBounds\", (elm) => logEvent(\"outOfBounds\", elm)],\n          [\"inViewport\", (elm) => logEvent(\"inViewport\", elm)],\n          [\"outOfViewport\", (elm) => logEvent(\"outOfViewport\", elm)],\n        ]}\n      />\n    </View>\n  );\n};\n"],"names":["Viewport","ball","invervalTimer","ballStatus","setBallStatus","createSignal","styleBall","width","height","x","y","rotation","borderRadius","color","hexColor","transition","duration","easing","Title","fontSize","mount","lineheight","randomIntBetween","from","to","Math","floor","random","onMount","setGlobalBackground","setInterval","logEvent","name","elm","prev","slice","console","log","onCleanup","clearInterval","_$createComponent","View","children","Text","style","join","autofocus","ref","r$","_ref$","onEvents"],"mappings":"wHAIA,MAAAA,EAAe,IAAM,CACnB,IAAIC,EAAMC,EAEV,KAAM,CAACC,EAAYC,CAAa,EAAIC,EAAa,CAAE,CAAA,EAE7CC,EAAY,CAChBC,MAAO,IACPC,OAAQ,IACRC,EAAG,KACHC,EAAG,KACHC,SAAU,EACVC,aAAc,GACdC,MAAOC,EAAS,SAAS,EACzBC,WAAY,CACVN,EAAG,CAAEO,SAAU,KAAMC,OAAQ,QAAS,EACtCP,EAAG,CAAEM,SAAU,KAAMC,OAAQ,QAAS,EACtCN,SAAU,CAAEK,SAAU,KAAMC,OAAQ,aAAc,CACpD,CAAA,EAGIC,EAAQ,CACZC,SAAU,GACVV,EAAG,IACHC,EAAG,IACHU,MAAO,GACPC,WAAY,EAAA,EAGRC,EAAmBA,CAACC,EAAMC,IAC9BC,KAAKC,MAAMD,KAAKE,OAAAA,GAAYH,EAAKD,EAAO,GAAKA,CAAI,EAEnDK,EAAQ,IAAM,CACZC,EAAoB,SAAS,EAExBpB,EAAAA,EAAK,KAAc,EACnBC,EAAAA,EAAK,IAAc,EACxBR,EAAgB4B,YAAY,IAAM,CAC3BnB,EAAAA,SAAWW,EAAiB,IAAK,EAAE,EACnCb,EAAAA,EAAIa,EAAiB,KAAM,IAAI,EAC/BZ,EAAAA,EAAIY,EAAiB,KAAM,IAAI,GACnC,IAAI,CAAA,CACR,EAEQS,SAAAA,EAASC,EAAMC,EAAK,CAC3B7B,EAAwB8B,GACf,CAAC,GAAGA,EAAMF,CAAI,EAAEG,MAAM,EAAE,CAChC,EACDC,QAAQC,IAAIL,CAAI,CAClB,CAEAM,OAAAA,EAAU,IAAM,CACdC,cAAcrC,CAAa,CAAA,CAC5B,EAEDsC,EACGC,EAAI,CAAA,IAAAC,UAAA,CAAAF,MAAAA,CAAAA,EACFG,EAAI,CAACC,MAAO1B,EAAK,IAAAwB,UAAA,CAAGvC,OAAAA,EAAa0C,EAAAA,KAAK,IAAI,CAAC,CAAA,CAAAL,EAAAA,EAC3CC,EAAI,CACHK,UAAS,GACTF,MAAOtC,EAASyC,IAAAC,EAAA,CAAA,IAAAC,EACXhD,EAAI,OAAAgD,cAAAA,EAAAD,CAAA,EAAJ/C,EAAI+C,CAAA,EACTE,SAAU,CACR,CAAC,cAAqBnB,EAAS,UAAe,CAAC,EAC/C,CAAC,cAAgBE,GAAQF,EAAS,aAAkB,CAAC,EACrD,CAAC,aAAuBA,GAAAA,EAAS,YAAiB,CAAC,EACnD,CAAC,gBAA0BA,GAAAA,EAAS,eAAoB,CAAC,CAAC,CAC3D,CAAA,CAAA,CAAA,CAAA,CAAA,CAIT"}